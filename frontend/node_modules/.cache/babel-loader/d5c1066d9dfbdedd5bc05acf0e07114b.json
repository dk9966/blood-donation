{"ast":null,"code":"import _objectSpread from\"/Users/DK/Projects/cardmongo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/DK/Projects/cardmongo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/DK/Projects/cardmongo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var ADD_MESSAGE_COLOR='#3d84b8';var REGULAR_MESSAGE_COLOR='#2b2e4a';var ERROR_MESSAGE_COLOR='#fb3640';var ProfileContext=/*#__PURE__*/createContext({messages:[],addCardMessage:function addCardMessage(){},addRegularMessage:function addRegularMessage(){},addErrorMessage:function addErrorMessage(){}});var makeMessage=function makeMessage(message,color){return{message:message,color:color};};var ProfileProvider=function ProfileProvider(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var addCardMessage=function addCardMessage(message){setMessages([].concat(_toConsumableArray(messages),[makeMessage(message,ADD_MESSAGE_COLOR)]));};var addRegularMessage=function addRegularMessage(){for(var _len=arguments.length,ms=new Array(_len),_key=0;_key<_len;_key++){ms[_key]=arguments[_key];}setMessages([].concat(_toConsumableArray(messages),_toConsumableArray(ms.map(function(m){return makeMessage(m,REGULAR_MESSAGE_COLOR);}))));};var addErrorMessage=function addErrorMessage(message){setMessages([].concat(_toConsumableArray(messages),[makeMessage(message,ERROR_MESSAGE_COLOR)]));};return/*#__PURE__*/_jsx(ProfileContext.Provider,_objectSpread({value:{messages:messages,addCardMessage:addCardMessage,addRegularMessage:addRegularMessage,addErrorMessage:addErrorMessage}},props));};function useProfile(){return useContext(ProfileContext);}export{ProfileProvider,useProfile};","map":{"version":3,"sources":["/Users/DK/Projects/cardmongo/frontend/src/hooks/useProfile.js"],"names":["createContext","useContext","useState","ADD_MESSAGE_COLOR","REGULAR_MESSAGE_COLOR","ERROR_MESSAGE_COLOR","ProfileContext","messages","addCardMessage","addRegularMessage","addErrorMessage","makeMessage","message","color","ProfileProvider","props","setMessages","ms","map","m","useProfile"],"mappings":"2dAAA,OAASA,aAAT,CAAwBC,UAAxB,CAAoCC,QAApC,KAAoD,OAApD,C,2CAEA,GAAMC,CAAAA,iBAAiB,CAAG,SAA1B,CACA,GAAMC,CAAAA,qBAAqB,CAAG,SAA9B,CACA,GAAMC,CAAAA,mBAAmB,CAAG,SAA5B,CAEA,GAAMC,CAAAA,cAAc,cAAGN,aAAa,CAAC,CACnCO,QAAQ,CAAE,EADyB,CAGnCC,cAAc,CAAE,yBAAM,CAAE,CAHW,CAInCC,iBAAiB,CAAE,4BAAM,CAAE,CAJQ,CAKnCC,eAAe,CAAE,0BAAM,CAAE,CALU,CAAD,CAApC,CAQA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,OAAD,CAAUC,KAAV,CAAoB,CACtC,MAAO,CAAED,OAAO,CAAPA,OAAF,CAAWC,KAAK,CAALA,KAAX,CAAP,CACD,CAFD,CAIA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,eACDb,QAAQ,CAAC,EAAD,CADP,wCAC1BK,QAD0B,eAChBS,WADgB,eAGjC,GAAMR,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACI,OAAD,CAAa,CAClCI,WAAW,8BAAKT,QAAL,GAAeI,WAAW,CAACC,OAAD,CAAUT,iBAAV,CAA1B,GAAX,CACD,CAFD,CAIA,GAAMM,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAW,+BAAPQ,EAAO,0CAAPA,EAAO,wBACnCD,WAAW,8BACNT,QADM,qBAENU,EAAE,CAACC,GAAH,CAAO,SAACC,CAAD,QAAOR,CAAAA,WAAW,CAACQ,CAAD,CAAIf,qBAAJ,CAAlB,EAAP,CAFM,GAAX,CAID,CALD,CAOA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACE,OAAD,CAAa,CACnCI,WAAW,8BAAKT,QAAL,GAAeI,WAAW,CAACC,OAAD,CAAUP,mBAAV,CAA1B,GAAX,CACD,CAFD,CAIA,mBACE,KAAC,cAAD,CAAgB,QAAhB,gBACE,KAAK,CAAE,CACLE,QAAQ,CAARA,QADK,CAELC,cAAc,CAAdA,cAFK,CAGLC,iBAAiB,CAAjBA,iBAHK,CAILC,eAAe,CAAfA,eAJK,CADT,EAOMK,KAPN,EADF,CAWD,CA7BD,CA+BA,QAASK,CAAAA,UAAT,EAAsB,CACpB,MAAOnB,CAAAA,UAAU,CAACK,cAAD,CAAjB,CACD,CAED,OAASQ,eAAT,CAA0BM,UAA1B","sourcesContent":["import { createContext, useContext, useState } from 'react';\n\nconst ADD_MESSAGE_COLOR = '#3d84b8';\nconst REGULAR_MESSAGE_COLOR = '#2b2e4a';\nconst ERROR_MESSAGE_COLOR = '#fb3640';\n\nconst ProfileContext = createContext({\n  messages: [],\n\n  addCardMessage: () => {},\n  addRegularMessage: () => {},\n  addErrorMessage: () => {},\n});\n\nconst makeMessage = (message, color) => {\n  return { message, color };\n};\n\nconst ProfileProvider = (props) => {\n  const [messages, setMessages] = useState([]);\n\n  const addCardMessage = (message) => {\n    setMessages([...messages, makeMessage(message, ADD_MESSAGE_COLOR)]);\n  };\n\n  const addRegularMessage = (...ms) => {\n    setMessages([\n      ...messages,\n      ...ms.map((m) => makeMessage(m, REGULAR_MESSAGE_COLOR)),\n    ]);\n  };\n\n  const addErrorMessage = (message) => {\n    setMessages([...messages, makeMessage(message, ERROR_MESSAGE_COLOR)]);\n  };\n\n  return (\n    <ProfileContext.Provider\n      value={{\n        messages,\n        addCardMessage,\n        addRegularMessage,\n        addErrorMessage,\n      }}\n      {...props}\n    />\n  );\n};\n\nfunction useProfile() {\n  return useContext(ProfileContext);\n}\n\nexport { ProfileProvider, useProfile };\n"]},"metadata":{},"sourceType":"module"}